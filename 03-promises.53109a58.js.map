{"mappings":"iiBAEA,IAAAA,EAAAC,EAAA,SAEAC,KAAO,CACLC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,gBAClCE,SAAUH,SAASC,cAAc,uBACjCG,QAASJ,SAASC,cAAc,sBAChCI,UAAWL,SAASC,cAAc,yBAGpC,IAAIK,EAAa,EAmBjB,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAGtB,IAAIC,SAAQ,SAACC,EAASC,GAChCL,EACFM,YAAW,WACTC,EAAArB,GAASsB,OAAOC,QACd,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,GAE/CA,GAEHO,YAAW,WACTC,EAAArB,GAASsB,OAAOG,QACd,sBAAqCD,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,GAE5CA,E,IAKTX,KAAKC,KAAKuB,iBAAiB,UAtC3B,SAAqBC,GACnBA,EAAEC,iBAIF,IAHA,IAAMC,EAAgBC,OAAO5B,KAAKK,SAASwB,OACrCC,EAAeF,OAAO5B,KAAKM,QAAQuB,OACnCE,EAAiBH,OAAO5B,KAAKO,UAAUsB,OACpCG,EAAI,EAAGA,GAAKD,EAAgBC,GAAK,EAGtCvB,EAAcuB,EADdxB,GADQ,IAANwB,EACYL,EAGAG,GAIlBtB,EAAa,C","sources":["src/js/03-promises.js"],"sourcesContent":["//* Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів, скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n// Доповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується або відхиляється через delay часу. Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. Використовуй початковий код функції для вибору того, що потрібно зробити з промісом - виконати або відхилити.\nimport Notiflix from 'notiflix';\n\nrefs = {\n  form: document.querySelector('.form'),\n  submitBtn: document.querySelector('button[type]'),\n  delayInp: document.querySelector('input[name=\"delay\"]'),\n  stepInp: document.querySelector('input[name=\"step\"]'),\n  amountInp: document.querySelector('input[name=\"amount\"]'),\n};\n\nlet finalDelay = 0;\n\nfunction onSubmitBtn(e) {\n  e.preventDefault();\n  const delayInpValue = Number(refs.delayInp.value);\n  const stepInpValue = Number(refs.stepInp.value);\n  const amountInpValue = Number(refs.amountInp.value);\n  for (let i = 1; i <= amountInpValue; i += 1) {\n    if (i === 1) {\n      finalDelay += delayInpValue;\n      createPromise(i, finalDelay);\n    } else {\n      finalDelay += stepInpValue;\n      createPromise(i, finalDelay);\n    }\n  }\n  finalDelay = 0;\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  // console.log(shouldResolve);\n\n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      setTimeout(() => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      }, delay);\n    } else {\n      setTimeout(() => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      }, delay);\n    }\n  });\n}\n\nrefs.form.addEventListener('submit', onSubmitBtn);\n"],"names":["$6JpON","parcelRequire","refs","form","document","querySelector","submitBtn","delayInp","stepInp","amountInp","$ce04d3a99e08e73b$var$finalDelay","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","success","concat","failure","addEventListener","e","preventDefault","delayInpValue","Number","value","stepInpValue","amountInpValue","i"],"version":3,"file":"03-promises.53109a58.js.map"}